import tensorflow as tf
from network.cnn_network import create_conv2d

def test_net(x, keep_prob):
    layer = create_conv2d(x, 10, strides=[2,2], w_name='W1')
    layer = tf.nn.relu(layer)
    layer = tf.nn.max_pool(layer, ksize=[1,2,2,1], strides=[1,2,2,1], padding='SAME')
    layer = create_conv2d(layer, 20, strides=[2,2], w_name='W2')
    layer = tf.nn.relu(layer)
    layer = tf.nn.max_pool(layer, ksize=[1,2,2,1], strides=[1,2,2,1], padding = 'SAME')
    layer = create_conv2d(layer, 40, strides=[2,2], w_name='W3')
    layer = tf.nn.relu(layer)
    layer = tf.nn.max_pool(layer, ksize=[1,2,2,1], strides=[1,2,2,1], padding = 'SAME')
    tf.nn.dropout(layer, keep_prob=keep_prob)
    layer = tf.contrib.layers.flatten(layer)
    layer = tf.contrib.layers.fully_connected(layer, 400)
    layer = tf.nn.dropout(layer, keep_prob)
    return tf.contrib.layers.fully_connected(layer, 10, activation_fn=None)

def conv_net_check1(x, keep_prob):
    layer = create_conv2d(x, 10, strides=[2,2], w_name='W1')
    layer = tf.nn.relu(layer)
    layer = tf.nn.max_pool(layer, ksize=[1,2,2,1], strides=[1,2,2,1], padding='SAME')
    layer = create_conv2d(layer, 20, strides=[2,2], w_name='W2')
    layer = tf.nn.relu(layer)
    layer = tf.nn.max_pool(layer, ksize=[1,2,2,1], strides=[1,2,2,1], padding = 'SAME')
    layer = create_conv2d(layer, 40, strides=[2,2], w_name='W3')
    layer = tf.nn.relu(layer)
    layer = tf.nn.max_pool(layer, ksize=[1,2,2,1], strides=[1,2,2,1], padding = 'SAME')
    tf.nn.dropout(layer, keep_prob=keep_prob)
    layer = tf.contrib.layers.flatten(layer)
    layer = tf.contrib.layers.fully_connected(layer, 400)
    layer = tf.nn.dropout(layer, keep_prob)
    return tf.contrib.layers.fully_connected(layer, 10, activation_fn=None)

def conv_net_check2(x, keep_prob):
    layer = create_conv2d(x, 10, strides=[2,2], w_name='W1')
    layer = tf.nn.relu(layer)
    layer = tf.nn.max_pool(layer, ksize=[1,2,2,1], strides=[1,2,2,1], padding='SAME')
    layer = create_conv2d(layer, 20, strides=[2,2], w_name='W2')
    layer = tf.nn.relu(layer)
    layer = tf.nn.max_pool(layer, ksize=[1,2,2,1], strides=[1,2,2,1], padding = 'SAME')
    layer = create_conv2d(layer, 40, strides=[2,2], w_name='W3')
    layer = tf.nn.relu(layer)
    layer = tf.nn.max_pool(layer, ksize=[1,2,2,1], strides=[1,2,2,1], padding = 'SAME')
    tf.nn.dropout(layer, keep_prob=keep_prob)
    layer = tf.contrib.layers.flatten(layer)
    layer = tf.contrib.layers.fully_connected(layer, 400)
    layer = tf.nn.dropout(layer, keep_prob)
    layer = tf.contrib.layers.fully_connected(layer, 200)
    layer = tf.nn.dropout(layer, keep_prob)
    return tf.contrib.layers.fully_connected(layer, 10, activation_fn=None)

def conv_net_check3(x, keep_prob):
    layer = create_conv2d(x, 10, strides=[2,2], w_name='W1')
    layer = tf.nn.relu(layer)
    layer = tf.nn.max_pool(layer, ksize=[1,2,2,1], strides=[1,2,2,1], padding='SAME')
    layer = create_conv2d(layer, 20, strides=[2,2], w_name='W2')
    layer = tf.nn.relu(layer)
    layer = tf.nn.max_pool(layer, ksize=[1,2,2,1], strides=[1,2,2,1], padding = 'SAME')
    layer = create_conv2d(layer, 40, strides=[2,2], w_name='W3')
    layer = tf.nn.relu(layer)
    layer = tf.nn.max_pool(layer, ksize=[1,2,2,1], strides=[1,2,2,1], padding = 'SAME')
    layer = create_conv2d(layer, 80, strides=[2,2], w_name='W4')
    layer = tf.nn.relu(layer)
    layer = tf.nn.max_pool(layer, ksize=[1,2,2,1], strides=[1,2,2,1], padding = 'SAME')
    tf.nn.dropout(layer, keep_prob=keep_prob)
    layer = tf.contrib.layers.flatten(layer)
    layer = tf.contrib.layers.fully_connected(layer, 400)
    layer = tf.nn.dropout(layer, keep_prob)
    layer = tf.contrib.layers.fully_connected(layer, 200)
    layer = tf.nn.dropout(layer, keep_prob)
    return tf.contrib.layers.fully_connected(layer, 10, activation_fn=None)

def conv_net_check4(x, keep_prob):
    layer = create_conv2d(x, 10, strides=[2,2], w_name='W1')
    layer = tf.nn.relu(layer)
    layer = tf.nn.max_pool(layer, ksize=[1,2,2,1], strides=[1,2,2,1], padding='SAME')
    layer = create_conv2d(layer, 20, strides=[2,2], w_name='W2')
    layer = tf.nn.relu(layer)
    layer = tf.nn.max_pool(layer, ksize=[1,2,2,1], strides=[1,2,2,1], padding = 'SAME')
    layer = create_conv2d(layer, 40, strides=[2,2], w_name='W3')
    layer = tf.nn.relu(layer)
    layer = tf.nn.max_pool(layer, ksize=[1,2,2,1], strides=[1,2,2,1], padding = 'SAME')
    layer = create_conv2d(layer, 80, strides=[2,2], w_name='W4')
    layer = tf.nn.relu(layer)
    layer = tf.nn.max_pool(layer, ksize=[1,2,2,1], strides=[1,2,2,1], padding = 'SAME')
    tf.nn.dropout(layer, keep_prob=keep_prob)
    layer = tf.contrib.layers.flatten(layer)
    layer = tf.contrib.layers.fully_connected(layer, 400)
    layer = tf.nn.dropout(layer, keep_prob)
    layer = tf.contrib.layers.fully_connected(layer, 200)
    layer = tf.nn.dropout(layer, keep_prob)
    layer = tf.contrib.layers.fully_connected(layer, 100)
    layer = tf.nn.dropout(layer, keep_prob)
    return tf.contrib.layers.fully_connected(layer, 10, activation_fn=None)